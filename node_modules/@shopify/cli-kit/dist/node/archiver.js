import { o as debug, b as content, t as token } from '../local-d0094ffe.js';
import { zip as zip$1 } from 'cross-zip';
import 'commondir';
import 'pathe';
import 'url';
import 'find-up';
import 'fast-glob';
import 'node:url';
import 'env-paths';
import '@oclif/core';
import 'source-map-support';
import 'ts-error';
import 'abort-controller';
import 'fs-extra';
import 'del';
import 'tempy';
import 'prettier';
import 'is-interactive';
import 'node:os';
import 'terminal-link';
import 'stacktracey';
import 'color-json';
import 'node:stream';
import 'execa';
import 'node:process';

async function zip(inputDirectory, outputZipPath) {
  debug(content`Zipping ${token.path(inputDirectory)} into ${token.path(outputZipPath)}`);
  const cwd = process.cwd();
  process.chdir(inputDirectory);
  await new Promise((resolve, reject) => {
    zip$1("./", outputZipPath, (error) => {
      process.chdir(cwd);
      if (error) {
        reject(error);
      } else {
        resolve();
      }
    });
  });
}

export { zip };
//# sourceMappingURL=archiver.js.map
