import {
  require_react
} from "./chunk-DXSMEY6L.js";
import {
  __toESM
} from "./chunk-QOVRSCHT.js";

// node_modules/@shopify/react-hooks/build/esm/hooks/debounced.mjs
var import_react = __toESM(require_react(), 1);
var DEFAULT_DELAY = 500;
function useDebouncedValue(value, {
  timeoutMs
} = {
  timeoutMs: DEFAULT_DELAY
}) {
  const [state, setState] = (0, import_react.useState)(value);
  const stateRef = (0, import_react.useRef)(state);
  (0, import_react.useEffect)(() => {
    if (stateRef.current === value) {
      return;
    }
    const timeout = setTimeout(() => {
      stateRef.current = value;
      setState(value);
    }, timeoutMs);
    return () => {
      clearTimeout(timeout);
    };
  }, [value, timeoutMs]);
  return state;
}

// node_modules/@shopify/react-hooks/build/esm/hooks/isomorphic-layout-effect.mjs
var import_react2 = __toESM(require_react(), 1);
var canUseDOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
var useIsomorphicLayoutEffect = canUseDOM ? import_react2.useLayoutEffect : import_react2.useEffect;

// node_modules/@shopify/react-hooks/build/esm/hooks/interval.mjs
var import_react3 = __toESM(require_react(), 1);
function useInterval(callback, delay) {
  const savedCallback = (0, import_react3.useRef)(callback);
  useIsomorphicLayoutEffect(() => {
    savedCallback.current = callback;
  }, [callback]);
  (0, import_react3.useEffect)(() => {
    function tick() {
      savedCallback.current();
    }
    if (delay !== null) {
      const id = setInterval(tick, delay);
      return () => clearInterval(id);
    }
  }, [delay]);
}

// node_modules/@shopify/react-hooks/build/esm/hooks/lazy-ref.mjs
var import_react4 = __toESM(require_react(), 1);
function useLazyRef(getValue) {
  const [value] = (0, import_react4.useState)(getValue);
  const ref = (0, import_react4.useRef)(value);
  return ref;
}

// node_modules/@shopify/react-hooks/build/esm/hooks/media.mjs
var import_react5 = __toESM(require_react(), 1);
function createUseMediaFactory(useEffectHook) {
  return (query) => {
    const [match, setMatch] = (0, import_react5.useState)(false);
    useEffectHook(() => {
      if (!window || !window.matchMedia) {
        return;
      }
      const matchMedia = window.matchMedia(query);
      const updateMatch = (event) => setMatch(event.matches);
      setMatch(matchMedia.matches);
      matchMedia.addListener(updateMatch);
      return () => {
        matchMedia.removeListener(updateMatch);
      };
    }, [query]);
    return match;
  };
}
var useMedia = createUseMediaFactory(import_react5.useEffect);
var useMediaLayout = createUseMediaFactory(import_react5.useLayoutEffect);

// node_modules/@shopify/react-hooks/build/esm/hooks/mounted-ref.mjs
var import_react6 = __toESM(require_react(), 1);
function useMountedRef() {
  const mounted = (0, import_react6.useRef)(true);
  useIsomorphicLayoutEffect(() => {
    return () => {
      mounted.current = false;
    };
  }, []);
  return mounted;
}

// node_modules/@shopify/react-hooks/build/esm/hooks/on-value-change.mjs
var import_react7 = __toESM(require_react(), 1);
function useOnValueChange(value, onChange) {
  const tracked = import_react7.default.useRef(value);
  (0, import_react7.useEffect)(() => {
    const oldValue = tracked.current;
    if (value !== tracked.current) {
      tracked.current = value;
      onChange(value, oldValue);
    }
  }, [value, onChange]);
}

// node_modules/@shopify/react-hooks/build/esm/hooks/previous.mjs
var import_react8 = __toESM(require_react(), 1);
function usePrevious(value) {
  const ref = (0, import_react8.useRef)();
  (0, import_react8.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref.current;
}

// node_modules/@shopify/react-hooks/build/esm/hooks/timeout.mjs
var import_react9 = __toESM(require_react(), 1);
function useTimeout(callback, delay) {
  const savedCallback = (0, import_react9.useRef)(callback);
  useIsomorphicLayoutEffect(() => {
    savedCallback.current = callback;
  }, [callback]);
  (0, import_react9.useEffect)(() => {
    function tick() {
      savedCallback.current();
    }
    if (delay !== null) {
      const id = setTimeout(tick, delay);
      return () => clearTimeout(id);
    }
  }, [delay]);
}

// node_modules/@shopify/react-hooks/build/esm/hooks/toggle.mjs
var import_react10 = __toESM(require_react(), 1);
function useToggle(initialState) {
  const [value, setState] = (0, import_react10.useState)(initialState);
  return {
    value,
    toggle: (0, import_react10.useCallback)(() => setState((state) => !state), []),
    setTrue: (0, import_react10.useCallback)(() => setState(true), []),
    setFalse: (0, import_react10.useCallback)(() => setState(false), [])
  };
}

// node_modules/@shopify/react-hooks/build/esm/hooks/force-update.mjs
var import_react11 = __toESM(require_react(), 1);
function useForceUpdate() {
  const [, setState] = (0, import_react11.useState)({});
  return (0, import_react11.useCallback)(() => setState({}), []);
}

// node_modules/@shopify/react-hooks/build/esm/hooks/delayed-callback.mjs
var import_react12 = __toESM(require_react(), 1);
function useDelayedCallback(callback, delay) {
  const timeoutRef = (0, import_react12.useRef)();
  (0, import_react12.useEffect)(() => {
    return () => {
      if (timeoutRef.current != null) {
        clearTimeout(timeoutRef.current);
      }
    };
  }, []);
  function callbackWithDelay() {
    const timeoutId = setTimeout(() => {
      callback();
      timeoutRef.current = void 0;
    }, delay);
    timeoutRef.current = timeoutId;
  }
  return callbackWithDelay;
}

export {
  useDebouncedValue,
  useIsomorphicLayoutEffect,
  useInterval,
  useLazyRef,
  useMedia,
  useMediaLayout,
  useMountedRef,
  useOnValueChange,
  usePrevious,
  useTimeout,
  useToggle,
  useForceUpdate,
  useDelayedCallback
};
//# sourceMappingURL=chunk-UH3NO47H.js.map
