"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Action = exports.validateAction = exports.validateProps = void 0;
var Picker_1 = require("../../actions/Picker");
Object.defineProperty(exports, "Action", { enumerable: true, get: function () { return Picker_1.Action; } });
var type_validate_1 = require("../type-validate");
var utils_1 = require("../utils");
var resourceSelectionSchema = type_validate_1.matchesArray(type_validate_1.matchesObject({
    id: type_validate_1.matchesString(),
}));
var pickerOptions = type_validate_1.matchesObject({
    items: type_validate_1.makeOptional(resourceSelectionSchema),
    selectedItems: type_validate_1.makeOptional(resourceSelectionSchema),
    maxSelectable: type_validate_1.makeOptional(type_validate_1.matchesPositiveInteger()),
    loading: type_validate_1.makeOptional(type_validate_1.matchesBoolean()),
    searchQuery: type_validate_1.makeOptional(type_validate_1.matchesString()),
    searchQueryPlaceholder: type_validate_1.makeOptional(type_validate_1.matchesString()),
    primaryActionLabel: type_validate_1.makeOptional(type_validate_1.matchesString()),
    secondaryActionLabel: type_validate_1.makeOptional(type_validate_1.matchesString()),
    title: type_validate_1.makeOptional(type_validate_1.matchesString()),
    emptySearchLabel: type_validate_1.makeOptional(type_validate_1.matchesObject({
        title: type_validate_1.matchesString(),
        description: type_validate_1.matchesString(),
        withIllustration: type_validate_1.matchesBoolean(),
    })),
});
var pickerActionSchema = type_validate_1.matchesObject({
    options: type_validate_1.makeOptional(pickerOptions),
});
var selectionSchema = type_validate_1.matchesObject({
    selectedItems: resourceSelectionSchema,
});
var searchSchema = type_validate_1.matchesObject({
    searchQuery: type_validate_1.makeOptional(type_validate_1.matchesString()),
});
/**
 * @unstable This API may be updated without warning in the future
 */
function validateProps(props) {
    return type_validate_1.validate(props, pickerOptions);
}
exports.validateProps = validateProps;
/**
 * @unstable This API may be updated without warning in the future
 */
function validateAction(action) {
    switch (action.type) {
        case Picker_1.Action.UPDATE:
        case Picker_1.Action.OPEN:
            return type_validate_1.validate(action, utils_1.createActionValidator(Picker_1.Action, pickerActionSchema, false, true));
        case Picker_1.Action.SELECT:
            return type_validate_1.validate(action, utils_1.createActionValidator(Picker_1.Action, selectionSchema, true, true));
        case Picker_1.Action.SEARCH:
            return type_validate_1.validate(action, utils_1.createActionValidator(Picker_1.Action, searchSchema, true, true));
        case Picker_1.Action.CANCEL:
        case Picker_1.Action.LOAD_MORE:
            return type_validate_1.validate(action, utils_1.createActionValidator(Picker_1.Action));
        default:
            return type_validate_1.validate(action, utils_1.createActionValidator(Picker_1.Action));
    }
}
exports.validateAction = validateAction;
